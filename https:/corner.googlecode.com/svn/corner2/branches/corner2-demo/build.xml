<?xml version="1.0" encoding="utf-8"?>
<!--
	Copyright 2006-2007 The Beijing Maxinfo Technology Ltd.
	site:http://www.bjmaxinfo.com
	file : $Id: build.xml 8021 2007-12-03 03:33:44Z jcai $
	created at:2007-11-23
-->
<project name="piano" basedir="." xmlns:artifact="urn:maven-artifact-ant">
    <import file="support/bootstrap/bootstrap.xml"/>
    <target name="init-library">
        <antcall target="init"/>
        <path id="maven-ant-tasks.classpath" path="support/ant-lib/maven-ant-tasks-2.0.7.jar"/>
        <typedef resource="org/apache/maven/artifact/ant/antlib.xml" uri="urn:maven-artifact-ant"
                 classpathref="maven-ant-tasks.classpath"/>
        <!-- 定义中央文件服务地址 -->
        <artifact:remoteRepository id="maxinfo.repository" url="http://dev.bjmaxinfo.com:5180/artifactory/repo"/>
        <!-- 定义maven得pom -->
        <artifact:pom file="pom.xml" id="piano"/>
        <!-- piano 依赖的所有包 -->
        <artifact:dependencies pathId="piano.path">
            <pom refid="piano"/>
            <remoteRepository refid="maxinfo.repository"/>
        </artifact:dependencies>
    </target>
    <!-- =================================
	target: 部署�一些jar到自己的服务器上
	================================= -->
    <target name="deploy.xdoclet" depends="init-library">
        <!-- xdoclet -->
        <!--<artifact:pom file="support/xdoclet/xdoclet-2.0.5.patch1.pom" id="xdoclet"/>
        <artifact:deploy file="support/xdoclet/xdoclet-2.0.5.patch1.jar">
        <remoteRepository url="http://dev.bjmaxinfo.com:5180/artifactory/libs-releases@repo">
            <authentication username="XXX" password="XXXX"/>
         </remoteRepository>
        <pom refid="xdoclet"/>
        </artifact:deploy> -->
        <!-- xdoclet corner plugin -->
        <!--<artifact:pom file="support/xdoclet/corner-xdoclet-2.0.2.1.pom" id="xdoclet.corner"/>
        <artifact:deploy file="support/xdoclet/corner-xdoclet-2.0.2.1.jar">
        <remoteRepository url="http://dev.bjmaxinfo.com:5180/artifactory/libs-releases@repo">
            <authentication username="XXX" password="XXX"/>
         </remoteRepository>
        <pom refid="xdoclet.corner"/>
        </artifact:deploy>-->
    </target>
    <!-- =================================
	target: 依据java文件中定义的tag生成hbm
	    以及tapestry的page配置文件.
	================================= -->
    <target name="rexdoclet" description="删除原来的hbm文件，重新生成hbm文件.">
        <delete>
            <fileset dir="src/main/resources">
                <include name="**/model/**/*.hbm.xml"/>
            </fileset>
        </delete>
        <antcall target="xdoclet"/>
    </target>
    <target name="xdoclet" description="生成hbm文件以及tapestry的form文件." depends="init-library">
        <artifact:dependencies pathId="xdoclet.classpath">
            <dependency groupId="xdoclet" artifactId="xdoclet"
                        version="2.0.5.patch1">
            </dependency>
            <dependency groupId="xdoclet-plugins" artifactId="xdoclet-plugin-hibernate"
                        version="1.0.2">
            </dependency>
            <dependency groupId="com.bjmaxinfo.corner" artifactId="corner-xdoclet"
                        version="2.0.2.1">
            </dependency>
            <remoteRepository refid="maxinfo.repository"/>
        </artifact:dependencies>
        <taskdef name="xdoclet" classname="org.xdoclet.ant.XDocletTask"
                 classpathref="xdoclet.classpath"/>
        <echo message="xdoclet for src/main/resources"/>
        <xdoclet encoding="utf-8">

            <!-- defines the file handled by xdoclet2 -->
            <fileset dir="${piano.build.sourceDirectory}">
                <include name="**/model/**/*.java"/>
            </fileset>

            <!-- defines the processing of a plugin -->
            <component
                    classname="org.xdoclet.plugin.hibernate.HibernateMappingPlugin"
                    destdir="src/main/resources" version="3.0"
                    encoding="utf-8"/>
            <component classname="corner.xdoclet.TapestryPageFormConfigPlugin"
                       destdir="${piano.build.directory}" encoding="utf-8"
                       packageregex="com.bjmaxinfo.piano.model"
                       packagereplace="tapestry"/>
            <component classname="corner.xdoclet.TapestryPageListConfigPlugin"
                       destdir="${piano.build.directory}" encoding="utf-8"
                       packageregex="com.bjmaxinfo.piano.model"
                       packagereplace="tapestry"/>
        </xdoclet>
    </target>
    <!-- =================================
        target: 依据hbm文件导出ddl文件.
        ================================= -->

    <target name="ddl.oracle.dev" description="从开发服务器上导出ORACLE的DDL文件">
        <property name="jdbc" value="oracle"/>
        <property name="piano-env" value="dev"/>
        <antcall target="schemaexport"/>
    </target>
    <target name="ddl.sqlserver.dev" description="从开发服务器上导出SQLSERVER的DDL文件">
        <property name="jdbc" value="sqlserver"/>
        <property name="piano-env" value="dev"/>
        <antcall target="schemaexport"/>
    </target>
    <target name="ddl.h2.dev" description="从开发服务器上导出H2的DDL文件">
        <property name="jdbc" value="h2"/>
        <property name="piano-env" value="dev"/>
        <antcall target="schemaexport"/>
    </target>
    <target name="schemaexport" depends="init-library">
        <taskdef name="schemaexport"
                 classname="org.hibernate.tool.hbm2ddl.SchemaExportTask"
                 classpathref="piano.path">
            <classpath>
                <pathelement path="${piano.build.outputDirectory}"/>

            </classpath>
        </taskdef>
        <schemaexport
                properties="src/main/resources/database/${jdbc}-${piano-env}.properties"
                quiet="no" text="no" drop="no" delimiter=";"
                output="${piano.build.directory}/${jdbc}-${piano-env}.sql">
            <fileset dir="src/main/resources">
                <include name="com/bjmaxinfo/piano/model/**/*.hbm.xml"/>
            </fileset>
        </schemaexport>
    </target>

    <!-- =================================
	target: 依据hbm文件生成数据库以及对象文�
	================================= -->
    <target name="hb2doc.oracle.dev" description="product oracle hbm doc">
        <property name="jdbc" value="oracle"/>
        <property name="piano-env" value="dev"/>
        <antcall target="hibernate.doc"/>
    </target>
    <target name="hb2doc.sqlserver.dev" description="product sqlserver hbm doc">
        <property name="jdbc" value="sqlserver"/>
        <property name="piano-env" value="dev"/>
        <antcall target="hibernate.doc"/>
    </target>
    <target name="hb2doc.h2.dev" description="product sqlserver hbm doc">
        <property name="jdbc" value="h2"/>
        <property name="piano-env" value="dev"/>
        <antcall target="hibernate.doc"/>
    </target>
    <target name="hibernate.doc" depends="init-library">

        <taskdef name="hibernatetool"
                 classname="org.hibernate.tool.ant.HibernateToolTask"
                >
            <classpath>
                <pathelement path="${piano.build.outputDirectory}"/>
                <path refid="piano.path"/>
            </classpath>
        </taskdef>
        <hibernatetool destdir="target/hibernate">
            <!--			<property key="dot.executable" value="dot"/> -->
            <configuration propertyfile="src/main/resources/database/${jdbc}-${piano-env}.properties">
                <fileset dir="src/main/resources">
                    <include name="**/*.hbm.xml"/>
                    <exclude name="**/*Test.hbm.xml"/>
                </fileset>
            </configuration>
            <hbmtemplate filePattern="wiki/{table-name}" exporterClass="com.bjmaxinfo.piano.tools.DBWikiExporter"
                         templatePath="support/templates" template="table.ftl"/>
            <hbmtemplate filePattern="wiki/{table-name}" exporterClass="com.bjmaxinfo.piano.tools.DBExcelExporter"/>
            <hbm2doc/>

        </hibernatetool>
    </target>
    <!-- =================================
	target: 编译jasper的jrxml文件
	================================= -->
    <target name="jrc" description="编译.jrxml文件�.jasper文件" depends="init-library">
        <taskdef name="jrc" classname="net.sf.jasperreports.ant.JRAntCompileTask">
            <classpath refid="piano.path"/>
        </taskdef>
        <jrc>
            <src>
                <fileset dir="src/main/resources">
                    <include name="**/*.jrxml"/>
                </fileset>
                <fileset dir="src/test/java">
                    <include name="**/*.jrxml"/>
                </fileset>
            </src>
            <classpath refid="piano.path"/>
        </jrc>
    </target>
    <!-- =================================
        target: 生成javadoc文档
        ================================= -->
    <target name="javadoc" description="创建ydoc文档" depends="init-library">
        <property name="ps" value="${path.separator}"/>
        <mkdir dir="${piano.build.directory}/docs/api"/>
        <javadoc sourcepath="${piano.build.sourceDirectory}" splitindex="true"
                 use="true" version="true" destdir="${piano.build.directory}/docs/api"
                 encoding="utf-8" charset="utf-8" source="1.5" linksource="yes"
                 packagenames="com.bjmaxinfo.piano.*"
                 classpathref="piano.path"
                 windowtitle="piano API"
                 maxmemory="384m"
                 stylesheetfile="support/resources/css/jdstyle.css"
                >


            <group title="模型�"
                   packages="com.bjmaxinfo.piano.model*"/>
            <group title="页面处理�"
                   packages="com.bjmaxinfo.piano.page*"/>
            <group title="后台逻辑服务�"
                   packages="com.bjmaxinfo.piano.service*"/>
            <group title="PDF打印服务�"
                   packages="com.bjmaxinfo.piano.tapestry.pdf*"/>
            <group title="Tapestry扩展�"
                   packages="com.bjmaxinfo.piano.tapestry*"/>
            <group title="Web处理�"
                   packages="com.bjmaxinfo.piano.web*"/>


            <doctitle><![CDATA[<h1>${piano.name} ${piano.version} API</h1>]]></doctitle>
            <bottom>
                <![CDATA[<i>Copyright &#169; 2006-2007 Beijing Maxinfo Technology Ltd. All Rights Reserved.</i>]]></bottom>
            <doclet
                    name="ydoc.doclets.YStandard"
                    path="support/ydoc-lib/ydoc.jar${ps}support/ydoc-lib/class2svg.jar${ps}support/ydoc-lib/ydoc-resources">
                <param name="-author"/>
                <param name="-generic"/>
                <param name="-umlautogen"/>
                <param name="-filterpath" value="support/ydoc-lib/ydoc.jar"/>
                <param name="-filter" value="ydoc.filters.ExcludeFilter"/>
                <param name="-tag" value="y.precondition"/>
                <param name="-tag" value="y.postcondition"/>
                <param name="-tag" value="y.complexity"/>
                <param name="-tag" value="param"/>
                <param name="-tag" value="return"/>
                <param name="-tag" value="see"/>
                <param name="-tag" value="y.uml"/>
            </doclet>
            <link href="http://dev.bjmaxinfo.com/~jcai/projs/corner/dist/docs/api/"/>
            <link href="http://dev.bjmaxinfo.com/docs/jdk/1.5.0_06/api-zh_CN/"/>
            <link href="http://tapestry.apache.org/tapestry4.1/apidocs/"/>
            <link href="http://hivemind.apache.org/hivemind1/hivemind/apidocs/"/>
            <link href="http://dev.bjmaxinfo.com/docs/spring/1.2.8/api/"/>

            <tag scope="all" enabled="false" name="hibernate.any-column"/>
            <tag scope="all" enabled="false" name="hibernate.any"/>
            <tag scope="all" enabled="false" name="hibernate.array"/>
            <tag scope="all" enabled="false" name="hibernate.bag"/>
            <tag scope="all" enabled="false" name="hibernate.cache"/>
            <tag scope="all" enabled="false" name="hibernate.class"/>
            <tag scope="all" enabled="false" name="hibernate.collection-id"/>
            <tag scope="all" enabled="false" name="hibernate.column"/>
            <tag scope="all" enabled="false" name="hibernate.component"/>
            <tag scope="all" enabled="false" name="hibernate.composite-element"/>
            <tag scope="all" enabled="false" name="hibernate.composite-id"/>
            <tag scope="all" enabled="false" name="hibernate.composite-index"/>
            <tag scope="all" enabled="false" name="hibernate.composite-key"/>
            <tag scope="all" enabled="false" name="hibernate.composite-map-key"/>
            <tag scope="all" enabled="false" name="hibernate.discriminator-column"/>
            <tag scope="all" enabled="false" name="hibernate.discriminator"/>
            <tag scope="all" enabled="false" name="hibernate.element"/>
            <tag scope="all" enabled="false" name="hibernate.filter-def"/>
            <tag scope="all" enabled="false" name="hibernate.filter-param"/>
            <tag scope="all" enabled="false" name="hibernate.filter"/>
            <tag scope="all" enabled="false" name="hibernate.formula"/>
            <tag scope="all" enabled="false" name="hibernate.generator-param"/>
            <tag scope="all" enabled="false" name="hibernate.id"/>
            <tag scope="all" enabled="false" name="hibernate.idbag"/>
            <tag scope="all" enabled="false" name="hibernate.import"/>
            <tag scope="all" enabled="false" name="hibernate.index-column"/>
            <tag scope="all" enabled="false" name="hibernate.index-many-to-any"/>
            <tag scope="all" enabled="false" name="hibernate.index-many-to-many"/>
            <tag scope="all" enabled="false" name="hibernate.index"/>
            <tag scope="all" enabled="false" name="hibernate.jcs-cache"/>
            <tag scope="all" enabled="false" name="hibernate.join"/>
            <tag scope="all" enabled="false" name="hibernate.joined-subclass-key"/>
            <tag scope="all" enabled="false" name="hibernate.joined-subclass"/>
            <tag scope="all" enabled="false" name="hibernate.key-column"/>
            <tag scope="all" enabled="false" name="hibernate.key-many-to-one"/>
            <tag scope="all" enabled="false" name="hibernate.key-property"/>
            <tag scope="all" enabled="false" name="hibernate.key"/>
            <tag scope="all" enabled="false" name="hibernate.list-index"/>
            <tag scope="all" enabled="false" name="hibernate.list"/>
            <tag scope="all" enabled="false" name="hibernate.loader"/>
            <tag scope="all" enabled="false" name="hibernate.many-to-any"/>
            <tag scope="all" enabled="false" name="hibernate.many-to-many"/>
            <tag scope="all" enabled="false" name="hibernate.many-to-one"/>
            <tag scope="all" enabled="false" name="hibernate.map-key-many-to-many"/>
            <tag scope="all" enabled="false" name="hibernate.map-key"/>
            <tag scope="all" enabled="false" name="hibernate.map"/>
            <tag scope="all" enabled="false" name="hibernate.mapping"/>
            <tag scope="all" enabled="false" name="hibernate.meta"/>
            <tag scope="all" enabled="false" name="hibernate.meta-value"/>
            <tag scope="all" enabled="false" name="hibernate.one-to-many"/>
            <tag scope="all" enabled="false" name="hibernate.one-to-one"/>
            <tag scope="all" enabled="false" name="hibernate.parent"/>
            <tag scope="all" enabled="false" name="hibernate.primitive-array"/>
            <tag scope="all" enabled="false" name="hibernate.properties"/>
            <tag scope="all" enabled="false" name="hibernate.property"/>
            <tag scope="all" enabled="false" name="hibernate.query-list"/>
            <tag scope="all" enabled="false" name="hibernate.query"/>
            <tag scope="all" enabled="false" name="hibernate.set"/>
            <tag scope="all" enabled="false" name="hibernate.sql-delete-all"/>
            <tag scope="all" enabled="false" name="hibernate.sql-delete"/>
            <tag scope="all" enabled="false" name="hibernate.sql-insert"/>
            <tag scope="all" enabled="false" name="hibernate.sql-query"/>
            <tag scope="all" enabled="false" name="hibernate.sql-update"/>
            <tag scope="all" enabled="false" name="hibernate.subclass"/>
            <tag scope="all" enabled="false" name="hibernate.subselect"/>
            <tag scope="all" enabled="false" name="hibernate.synchronize"/>
            <tag scope="all" enabled="false" name="hibernate.timestamp"/>
            <tag scope="all" enabled="false" name="hibernate.type-param"/>
            <tag scope="all" enabled="false" name="hibernate.type"/>
            <tag scope="all" enabled="false" name="hibernate.typedef-param"/>
            <tag scope="all" enabled="false" name="hibernate.typedef"/>
            <tag scope="all" enabled="false" name="hibernate.union-subclass"/>
            <tag scope="all" enabled="false" name="hibernate.version"/>
        </javadoc>

    </target>
</project>
